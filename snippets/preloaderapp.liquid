{%- comment -%}
  
<aside id="c-preloaderapp" aria-hidden="true">
    {% comment %}
DO NOT EDIT THIS FILE. YOUR CHANGES WILL BE OVERWRITTEN
{% endcomment %}

  <div class="c-preloaderapp">
    <div class="c-preloaderapp__inner">
      
{%- assign preloaderapp_image = 'preloaderapp.gif' | asset_url -%}
{%- assign preloaderapp_image_type = 'preloaderapp.gif' | split: '.' | last | prepend: '.' -%}
{%- assign preloaderapp_image_widths = '180,360,540,720,900,1080,1296,1512,1728,1944,2160,2376,2592,2808,3024' -%}
{% assign preloaderapp_widths_array = preloaderapp_image_widths | split: ',' %}
{%- capture preloaderapp_srcset -%}
  {%- for width in preloaderapp_widths_array -%}
    {% assign preloaderapp_url_width = '_' | append: width | append: 'x' | append: preloaderapp_image_type %}
    {%- if forloop.last -%}
      {% assign preloaderapp_size_width = width | append: 'w' %}
    {%- else -%}
      {% assign preloaderapp_size_width = width | append: 'w,' %}
    {%- endif -%}
    {{ preloaderapp_image | replace: preloaderapp_image_type, preloaderapp_url_width }} {{ preloaderapp_size_width }}
  {%- endfor -%}
{%- endcapture -%}
<img class="c-preloaderapp__image"
   src="{{ preloaderapp_image }}"
   srcset="{{ preloaderapp_srcset }}"
   tabindex="-1"
   alt="Preloader image"
>

    </div>
  </div>

  <style>
    @keyframes fadeInPreloaderApp {
      0% {
        opacity: 0;
        visibility: hidden;
      }
    
      100% {
        opacity: 1;
        visibility: visible;
      }
    }
    
    @keyframes fadeOutPreloaderApp {
      0% {
        opacity: 1;
        visibility: visible;
      }
    
      100% {
        opacity: 0;
        visibility: hidden;
      }
    }

    .c-preloaderapp {
      position: fixed;
      z-index: 2147483647;
      top: 0;
      left: 0;
      background-color: white;
      width: 100vw;
      height: 100vh;
      opacity: 1;
      visibility: visible;
      will-change: opacity, visibility;
      animation: fadeOutPreloaderApp 0.5s forwards;
      animation-delay: 1s;
      pointer-events: none;
    }
    .c-preloaderapp--fadeOut {
      animation: fadeInPreloaderApp 0.5s forwards;
    }
    
    .c-preloaderapp__inner {
      width: 100%;
      height: 100%;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    
    .c-preloaderapp__image {
      opacity: 100%;
      
      width: 40%;
      height: auto;
      max-height: 100%;        
    
    }
    
      
  </style>   

<script>
(function() {
  



  if (window.NodeList && !NodeList.prototype.forEach) {
    NodeList.prototype.forEach = Array.prototype.forEach;
  }
  
  function removeLastSlash(str) {
    let retStr = str;
    if(str.charAt(str.length - 1) === '/') {
      retStr = str.slice(0, -1);
    }
    return retStr;
  }
  
  function containsExcluded(class_list, excluded_classes) {
    for (let el of class_list) {
      for (let elExcluded of excluded_classes) {
        if (el.includes(elExcluded)) return true;
      }
    }
    return false;
  }
  
  document.addEventListener('DOMContentLoaded', () => {
    const links = document.querySelectorAll('a');
    const preloaderHtml = document.getElementsByClassName('c-preloaderapp')[0];
    const windowLocationPathnameTrim = removeLastSlash(window.location.pathname);
    const domain = '{{shop.domain}}';
    const permanent_domain = '{{shop.permanent_domain}}';
    const excluded_classes = ["js-","cart","ajax","toggle"];
    if (preloaderHtml) {
      links.forEach(link => {
        const isExcluded = containsExcluded(link.classList, excluded_classes);
        const url = link.getAttribute('href');
        const isNewWindow = link.getAttribute('target');
        const isSameDomain = (link.hostname === domain || link.hostname === permanent_domain);
        const linkPathnameTrim = removeLastSlash(link.pathname);
        let navigatingWithinPage = true;
        if (isSameDomain) {
          navigatingWithinPage = url.startsWith('#') || 
          (linkPathnameTrim === windowLocationPathnameTrim && url.includes((link.pathname + '#')));
        }
        if (!isNewWindow && isSameDomain && !navigatingWithinPage && !isExcluded) {
          link.addEventListener('click', function(event) {
            event.preventDefault();
            const url = this.getAttribute('href');
            preloaderHtml.classList.add('c-preloaderapp--fadeOut');
            setTimeout(() => window.location.href = url, 0.5 * 1000)
          })
        }
      })
    }
  });
  // fix for safari
  window.addEventListener('pageshow', function(event){
    if (event.persisted) {
        const preloaderHtml = document.getElementsByClassName('c-preloaderapp')[0];
        preloaderHtml.classList.remove('c-preloaderapp--fadeOut');
    }    
  });       
  
    
})();
</script>

  </aside>
{%- endcomment -%}
